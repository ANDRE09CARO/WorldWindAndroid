/*
 * Copyright (c) 2016 United States Government as represented by the Administrator of the
 * National Aeronautics and Space Administration. All Rights Reserved.
 */

package gov.nasa.worldwind.layer;

import android.content.Context;
import android.support.annotation.DrawableRes;

import gov.nasa.worldwind.R;
import gov.nasa.worldwind.geom.Sector;
import gov.nasa.worldwind.shape.SurfaceImage;
import gov.nasa.worldwind.util.Logger;
import gov.nasa.worldwind.util.Resource;

/**
 * Displays NASA's Blue Marble next generation imagery from an Android drawable resource. By default,
 * BlueMarbleBackgroundLayer is configured to retrieve the 40km resolution image from the built-in World Wind library
 * resource res/drawable/gov_nasa_worldwind_worldtopobathy2004053.
 * <p/>
 * Information on NASA's Blue Marble next generation imagery can be found at http://earthobservatory.nasa.gov/Features/BlueMarble/
 */
public class BlueMarbleBackgroundLayer extends RenderableLayer { // TODO rename as BackgroundLayer, adjust comments

    /**
     * Constructs a Blue Marble image layer with the built-in World Wind library resource
     * res/drawable/gov_nasa_worldwind_worldtopobathy2004053. This resource must be accessible from the specified
     * context.
     *
     * @param resourceContext an Android application context containing the resource res/drawable/gov_nasa_worldwind_worldtopobathy2004053
     *
     * @throws IllegalArgumentException If the context is null
     */
    public BlueMarbleBackgroundLayer(Context resourceContext) {
        if (resourceContext == null) {
            throw new IllegalArgumentException(
                Logger.logMessage(Logger.ERROR, "BlueMarbleBackgroundLayer", "constructor", "missingContext"));
        }

        this.initWithImageSource(new Resource(resourceContext, R.drawable.gov_nasa_worldwind_worldtopobathy2004053));
    }

    /**
     * Constructs a Blue Marble image layer with a specified drawable resource. The image's dimensions must be no
     * greater than 2048 x 2048.
     *
     * @param resourceContext the Android system context containing the resource
     * @param resourceId      the resource identifier, as generated by the aapt tool
     *
     * @throws IllegalArgumentException If the context is null
     */
    public BlueMarbleBackgroundLayer(Context resourceContext, @DrawableRes int resourceId) {
        if (resourceContext == null) {
            throw new IllegalArgumentException(
                Logger.logMessage(Logger.ERROR, "BlueMarbleBackgroundLayer", "constructor", "missingContext"));
        }

        this.initWithImageSource(new Resource(resourceContext, resourceId));
    }

    /**
     * Constructs a Blue Marble image layer with a specified image URL. The image's dimensions must be no greater than
     * 2048 x 2048.
     *
     * @param urlString string indicating the image URL
     *
     * @throws IllegalArgumentException If the URL is null
     */
    public BlueMarbleBackgroundLayer(String urlString) {
        if (urlString == null) {
            throw new IllegalArgumentException(
                Logger.logMessage(Logger.ERROR, "BlueMarbleBackgroundLayer", "constructor", "missingUrl"));
        }

        this.initWithImageSource(urlString);
    }

    protected void initWithImageSource(Object imageSource) {
        this.setDisplayName("Blue Marble Background");

        // Disable picking for the layer because it covers the full sphere and will override a terrain pick.
        this.setPickEnabled(false);

        // Delegate display to the SurfaceImage shape.
        this.addRenderable(new SurfaceImage(new Sector().setFullSphere(), imageSource));
    }
}
